@charset "UTF-8";

/*****************************
a 태그에 대한 기본 스타일 설정 
 *****************************/
/* 텍스트에 밑줄(text-decoration)을 없애고, 색상(color)을 상위 요소로 상속받도록 지정 */
a,
a:link,
a:visited,
a:active,
a:hover	{text-decoration: none; color: inherit;} 

/*****************************
button에 대한 기본 스타일 설정
******************************/
/* 기본적인 브라우저 스타일을 제거하고, 버튼의 폰트와 색상을 상위 요소로 상속받도록 설정 */
button {-webkit-appearance:none; -moz-appearance: none; appearance: none; border: 0 none; font-family: inherit; color: inherit; padding: 0;}

/*******************************
button과 a 링크에 포커스 있을 때
********************************/
/* 외곽선(outline)을 제거 */
button:focus,
a:focus	{outline-color: transparent; outline-style: none;}

/**************************************
button 요소에 적용되는 공통 스타일 정의 
***************************************/
/* 버튼을 중앙 정렬하고, 텍스트와 아이콘을 수직, 수평으로 정렬 */
.btn {display: -webkit-inline-box; display: -ms-inline-flexbox; display: inline-flex;
	-webkit-justify-content: center; -ms-flex-pack: center; justify-content: center;
	-webkit-align-items: center; -ms-flex-align: center; align-items: center;
	text-align:center; vertical-align: middle; border: 0 none; cursor: pointer; background: transparent; font-size: 0;
	-webkit-transition: color 0.3s ease, background-color 0.3s ease, border-color 0.3s ease;
	-o-transition: color 0.3s ease, background-color 0.3s ease, border-color 0.3s ease;
	transition: color 0.3s ease, background-color 0.3s ease, border-color 0.3s ease;
}

/* 버튼 내의 아이콘에 대한 전환 효과(transition)를 설정 */
.btn .ico {-webkit-transition: 0.3s ease; -o-transition: 0.3s ease; transition: 0.3s ease}

/* a 링크 버튼에는 밑줄을 없앰 */
a.btn {text-decoration: none;}

/* 입력 버튼(input)과 일반 버튼(button) 스타일 설정 */
input.btn,
button.btn {overflow: visible; margin: 0; background-color: transparent;}

/* 특정 클래스(.item)가 적용되지 않은 링크와 모든 버튼에 투명한 배경색 적용, 탭 시 하이라이트 효과를 없앰 */
a:not(.item),
button {background-color: transparent; -webkit-tap-highlight-color: rgba(0,0,0,0);}
 
/* 입력 필드와 버튼에 공통으로 적용되는 스타일을 설정, 오버플로를 보이게 하고, 여백을 0으로 설정하며, 배경색을 투명하게 함 */
.btn.btn,
button.btn {overflow: visible; margin: 0; background-color: transparent;}

/* button transparent */
/* .transparent 클래스가 적용된 버튼에 대해 패딩(padding)을 없애고 배경색을 투명하게 설정 */
.btn.transparent {padding: 0; background-color: transparent;}

/**********
button size 
***********/
/* 버튼 사이즈별로 기본 설정 */
.btn.xsmall					{height: var(--xsmall); font-weight: 600; font-size: 14px; padding: 0 20px;}
.btn.small:not(.transparent)					{height: var(--small); font-weight: 600; font-size: 14px; padding: 0 30px;}
.btn.medium					{height: var(--medium); font-weight: 600; font-size: 16px; padding: 0 40px;}
.btn.large					{height: var(--large); font-weight: 600; font-size: 16px; padding: 0 40px;}
.btn.xlarge					{height: var(--xlarge); font-weight: 600; font-size: 16px; padding: 0 40px;}
/* 화면 너비가 768px 이하일 때의 버튼 스타일을 정의하는 미디어 쿼리 */
@media all and (max-width: 768px) {
	.btn.medium	 {font-size: 14px;}
}

/***********
button color 
************/
/* 버튼 색깔별로 기본 설정 */
.btn.white					{background: var(--white); color: var(--navy); border-radius: 2px;}
.btn.navy					{background: var(--navy); color: var(--white); border-radius: 2px;}
.btn.blue					{background: var(--blue); color: var(--white); border-radius: 2px;}
.btn.blue-gray					{background: var(--blue-gray-2); color: var(--navy); border-radius: 2px;}

/* .bdr 부분을 포함하는 클래스에 테두리 스타일을 적용 */
.btn[class*="bdr"]	{border-width: 1px; border-style: solid; border-radius: 2px;} 
.btn.bdr-navy					{background: transparent; border-color: var(--navy); color: var(--navy);}
.btn.bdr-blue					{background: transparent; border-color: var(--blue); color: var(--blue);}
.btn.bdr-lightgray					{background: transparent; border-color: var(--light-gray-2); color: var(--white);}

/*********
button etc 
**********/
.btn.link {font-size: 20px;} /* .link 클래스가 적용된 버튼에 대해 글꼴 크기(font-size)를 20px로 설정 */
.btn.list {font-size: 16px;color: var(--navy);} /* .list 클래스가 적용된 버튼에 대해 글꼴 크기를 16px로, 글자 색상을 변수 --navy로 설정 */
.btn.list .ico{margin-right: 15px;} /* .list 클래스가 적용된 버튼 내부의 아이콘(.ico)에 대해 오른쪽 여백(margin-right)을 15px로 설정 */
.btn.map{height: 48px;padding: 0 30px;font-size: 14px;font-weight: 600;color: var(--navy);border: 1px solid var(--navy);}/* .map 클래스가 적용된 버튼에 대해 높이(height)를 48px, 패딩(padding)을 0 30px로, 글꼴 크기를 14px, 글꼴 두께(font-weight)를 600으로, 글자 색상과 테두리 색상을 변수 --navy로 설정 */
.btn.map .ico{margin-right: 10px;} /* .map 클래스가 적용된 버튼 내부의 아이콘(.ico)에 대해 오른쪽 여백(margin-right)을 10px로 설정 */
/* 화면 너비가 768px 이하일 때의 버튼 스타일을 정의하는 미디어 쿼리 
.btn.list .ico {margin-right: 10px;}를 다시 정의, 아이콘 오른쪽 여백을 10px로 설정 */
@media all and (max-width: 768px) {
	.btn.list .ico{margin-right: 10px;}	
}

/********
btn point
*********/
/* .btn.point 클래스가 적용된 버튼에 대해 버튼의 위치(position)를 상대적(relative)으로, 테두리 반경(border-radius)을 50%로, 패딩(padding)을 0으로 설정 */
.btn.point {position: relative; border-radius: 50%; padding: 0;}
/* .btn.point 클래스가 적용된 버튼 내부에 추가 요소를 생성하고 스타일을 적용, 이 요소들은 버튼의 점을 나타냅니다. ::before와 ::after 선택자를 사용하여 두 개의 동일한 원 모양의 요소를 생성 */
.btn.point::before ,
.btn.point::after {content: ''; display: inline-block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; border-radius: 50%;}
/* .btn.point::after {content: ''; display: inline-block; position: absolute; width: 5px; height: 5px; background-color: rgba(0,0,0,0.5); border-radius: 50%;} */
.btn.point::before,
.btn.point::after {animation: pulsate 1.5s ease-out 0s infinite;}  
.btn.point::after {animation-delay: 0.5s;} /* pulsate라는 이름의 애니메이션을 정의하고, 이 애니메이션을 .btn.point::before와 .btn.point::after에 적용. 애니메이션은 점이 펄스(pulse)하는 효과를 만듦 */
/* 특정 클래스(.navy와 .blue-gray)가 추가로 적용된 .btn.point 버튼에 대해 점의 배경색을 설정 */
.btn.point.blue-gray::before ,
.btn.point.navy::before ,
.btn.point.navy::after {background-color: rgba(28, 30, 41, 0.3);} 
.btn.point.blue-gray::after {background-color: rgba(209, 213, 222, 0.3);}
.btn.point.btn.xlarge {width: var(--xlarge);} /* .btn.point와 .xlarge 클래스가 함께 적용된 버튼에 대해 너비(width)를 --xlarge 변수 값으로 설정 */
/* pulsate 키프레임 애니메이션을 정의 */
/*  시작 크기에서 시작하여 50%에서 최대 크기로 커지고, 다시 100%에서 원래 크기로 줄어드는 펄스 효과를 생성 */
@-webkit-keyframes pulsate { /* -webkit-keyframes는 웹킷 브라우저에서 사용되는 접두사를 가진 버전 */
    0% {-webkit-transform: scale(0.1, 0.1); transform: scale(0.1, 0.1); opacity: 0.0;}
    50% {opacity: 1.0;}
    100% {-webkit-transform: scale(2.2, 2.2); transform: scale(2.2, 2.2); opacity: 0.0;}
}
/* 0%: 애니메이션의 시작점을 정의 요소의 크기는 0.1배, 투명도(opacity)는 0%로 설정
50%: 애니메이션의 중간점을 정의 투명도(opacity)는 100%로 설정
100%: 애니메이션의 종료점을 정의 요소의 크기는 2.2배, 투명도(opacity)는 다시 0%로 설정 */
@keyframes pulsate { /* 표준 CSS 키프레임 애니메이션을 정의 */
    0% {-webkit-transform: scale(0.1, 0.1); transform: scale(0.1, 0.1); opacity: 0.0;}
    50% {opacity: 1.0;}
    100% {-webkit-transform: scale(2.2, 2.2); transform: scale(2.2, 2.2); opacity: 0.0;}
}

/***********
btn disabled
************/
/* disabled 속성이 적용된 버튼에 대해서는 그레이스케일(회색조) 필터를 적용하여 버튼을 회색으로 만듦. 비활성화된 상태의 버튼을 시각적으로 구분할 수 있음 */
.btn[disabled]				{filter: grayscale(0.5);}

/********
btn inner
*********/
/* .xsmall 클래스가 적용되지 않은 .btn 버튼 내의 텍스트(span)와 아이콘(.ico) 사이에 여백을 10px로 설정 */
.btn:not(.xsmall) > span + .ico ,
.btn:not(.xsmall) > .ico + span {margin-left: 10px;}
/* .xsmall 클래스가 적용된 .btn 버튼 내의 텍스트(span)와 아이콘(.ico) 사이에 여백을 5px로 설정 */
.btn.xsmall > span + .ico ,
.btn.xsmall > .ico + span {margin-left: 5px;}
/* .btn 버튼 내의 텍스트(span)와 아이콘(.ico-wrap) 사이에 여백을 20px로 설정 */
.btn > span + .ico-wrap {margin-left: 20px;}
/* .btn 버튼 내의 아이콘(.ico)과 텍스트(span) 사이에 여백을 13px로 설정 */
.btn > .ico + span {margin-left: 13px;}
/* 화면 너비가 768px 이하일 때의 버튼 스타일을 정의하는 미디어 쿼리 */
@media all and (max-width: 768px) {
	.btn > span + .ico-wrap {margin-left: 10px;}
}

/**********
button-area
***********/
/* button-area 클래스는 Flexbox 레이아웃을 사용하여 정렬
-ms-flexbox와 -webkit-flex는 각각 Microsoft Edge와 Webkit 기반 브라우저(예: Chrome, Safari)에서 Flexbox를 지원하기 위한 접두사 */
.button-area {display: -ms-flexbox; display: -webkit-flex; display: flex;
	-webkit-align-items: center; -ms-flex-align: center; align-items: center; /* 수직 정렬 방향에서 아이템들을 중앙으로 정렬 */
	/*font-size: 0;*/
}
.button-area.center {-webkit-justify-content: center; -ms-flex-pack: center; justify-content: center;} /* .center 클래스가 추가된 경우, 아이템들을 수평 방향으로 중앙에 정렬 */
.button-area.bottom {margin-top: 100px;} /* .bottom 클래스가 추가된 경우, 버튼 영역의 상단 여백을 100px로 설정 */
.button-area.right {-webkit-box-pack: end; -ms-flex-pack: end; justify-content: flex-end;} /* .right 클래스가 추가된 경우, 아이템들을 오른쪽으로 정렬 */
.button-area[class*="col"] .btn + .btn,
.button-area > span + .btn {margin-left: 10px;}  /* .button-area 클래스 중에 col이 포함된 클래스와 .btn 버튼 사이에 여백을 10px로 설정 */
.button-area[class*="row"] {-webkit-box-orient: vertical; -webkit-box-direction: normal; -ms-flex-direction: column; flex-direction: column;}  /* .button-area 클래스 중에 row이 포함된 클래스에 대해, 아이템들을 수직으로 정렬 */
.button-area[class*="row"] .btn + .btn {margin-top: 20px;} /* row 클래스가 포함된 .button-area 내의 버튼 사이에 상단 여백을 20px로 설정 */
/* 화면 너비가 768px 이하일 때의 버튼 영역 스타일을 정의하는 미디어 쿼리 */
@media all and (max-width: 768px) {
	.button-area.bottom {margin-top: 40px;} /*화면이 작을 때, 버튼 영역의 상단 여백을 40px로 줄임 */
	.button-area[class*="col"] > .btn {-webkit-box-flex: 1; -ms-flex: 1; flex: 1;} /* col 클래스가 포함된 버튼 영역 내의 버튼들이 동일한 너비를 가지도록 설정 */
	.button-area > span {font-size: 14px; letter-spacing: -0.28px;} /* 버튼 영역 내의 텍스트(span)의 글꼴 크기와 문자 간격을 조절 */
}